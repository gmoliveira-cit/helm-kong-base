apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "kong-base.name" . }}-kong-proxy
  namespace: {{ .Release.Namespace }}
spec:
  template:
    metadata:
      labels:
        name: {{ include "kong-base.name" .}}-kong
        app: kong
    spec:
      initContainers:
      - name: wait-for-migrations
        image: kong:1.2
        command: [ "/bin/sh", "-c", "kong migrations list" ]
        env:
        - name: KONG_ADMIN_LISTEN
          value: 'off'
        - name: KONG_PROXY_LISTEN
          value: 'off'
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PG_HOST
          valueFrom:
            configMapKeyRef:
              name: {{include "postgres.name" .}}
              key: host
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{include "postgres.name" .}}
              key: password
      containers:
      - name: kong-proxy
        image: kong:1.2
        env:
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{include "postgres.name" .}}
              key: password
        - name: KONG_PG_HOST
          valueFrom:
            configMapKeyRef:
              name: {{include "postgres.name" .}}
              key: host
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: 'off'
        - name: KONG_NGINX_HTTP_INCLUDE
          value: /etc/prometheus-server.conf
        ports:
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-ssl
          containerPort: 8443
          protocol: TCP
        - name: prometheus
          containerPort: 9542
          protocol: TCP
        lifecycle:
          preStop:
            exec:
              command: [ "/bin/sh", "-c", "kong quit" ]
        volumeMounts:
          - name: prometheus-server
            mountPath: /etc/prometheus-server.conf
            subPath: prometheus-server.conf
      volumes:
        - name: prometheus-server
          configMap:
            name: {{.Release.Name}}-prometheus-server
            items:
              - key: prometheus-server.conf
                path: prometheus-server.conf
